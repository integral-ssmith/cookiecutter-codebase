# can create automatically with pycharm if mamba installed, otherwise run the following
# in the miniforge prompt in the appropriate directory
# > conda env create --file environment.yml
name: "{{ cookiecutter.project_slug }}"
channels:
  - defaults
  - conda-forge
dependencies:
  # base python
  - python
  # io
  - dill
  - pyyaml
  # basic data handling
  - numpy
  {% if cookiecutter.include_pandas -%}
  - openpyxl
  - pandas
  - pyarrow
  - pytables{%- endif %}
  { % if cookiecutter.include_polars -% }
  - polars{%- endif %}
  # geospatial
  { % if cookiecutter.include_geospatial -% }
  - geopandas{%- endif %}
  # plotly plotting
  { % if cookiecutter.include_plotly -% }
  - plotly{%- endif %}
  # useful utilities
  - tqdm
  # code & commit formatting
  - black
  - blacken-docs
  - ruff
  - pre-commit
  # documentation
  - sphinx
  # code testing
  - pytest
  # pip only packages
  - pip:
    # geospatial
    { % if cookiecutter.include_geospatial -% }
    - geovoronoi
    - rasterio
    - rasterstats{%- endif %}
    # plotly plotting
    {% if cookiecutter.include_plotly -%}
    - kaleido{%- endif %}
    # code & commit formatting
    - conventional-pre-commit

# TODO kaleido version based on windows vs other
# TODO other common libraries to include, some using the optional booleans
#   - graph libraries: networkx, rustworkx
#   - specialized data: awkward
#   - speed ups: numba, cudatoolkit, dask, ray, modin
#   - engineering: thermo
#   - coding: attrs
# TODO post cookiecutter hook to freeze library versions
